{:deps {borkdude/dynaload {:mvn/version "0.3.5"}
        cljs-bean/cljs-bean {:mvn/version "1.8.0"}
        instaparse/instaparse {:mvn/version "1.4.12"}
        medley/medley {:mvn/version "1.4.0"}
        metosin/muuntaja {:mvn/version "0.6.8"}
        net.cgrand/macrovich {:mvn/version "0.2.1"}
        net.cgrand/xforms {:mvn/version "0.19.2"}
        io.github.OpenGen/GenSQL.inference {:git/sha "689fe740dead93f3ba349a88efa52f2544aa138b"}
        org.babashka/sci {:mvn/version "0.3.32"}
        org.clojure/clojure {:mvn/version "1.11.1"}
        com.google.javascript/closure-compiler-unshaded {:mvn/version "v20230802"}
        org.clojure/clojurescript {:mvn/version "1.11.132"}
        org.clojure/core.match {:mvn/version "1.0.0"}
        org.clojure/data.csv {:mvn/version "1.0.1"}
        org.clojure/math.combinatorics {:mvn/version "0.1.6"}
        org.clojure/tools.cli {:mvn/version "1.0.206"}
        org.slf4j/slf4j-nop {:mvn/version "1.7.36"} ; needed so tablesaw doesn't log
        rhizome/rhizome {:mvn/version "0.2.9"}
        ring-cors/ring-cors {:mvn/version "0.1.13"}
        ring/ring-core {:mvn/version "1.9.5"}
        ring/ring-jetty-adapter {:mvn/version "1.9.5"}
        tech.tablesaw/tablesaw-core {:mvn/version "0.43.1"}
        org.clojure/core.memoize {:mvn/version "1.0.257"}}
 :paths ["src" "resources"]
 :aliases {:test {:extra-paths ["test"]
                  :extra-deps {com.gfredericks/test.chuck {:mvn/version "0.2.13"}
                               org.clojure/test.check {:mvn/version "1.1.1"}}}
           :build {:deps {io.github.clojure/tools.build {:git/sha "8e78bccc35116f6b6fc0bf0c125dba8b8db8da6b"}}
                   :ns-default build}
           :build-with-sppl {:deps {io.github.clojure/tools.build {:git/sha "8e78bccc35116f6b6fc0bf0c125dba8b8db8da6b"}
                                    io.github.OpenGen/GenSQL.gpm.sppl {:git/sha "718de40878766bb8d08acc2b429a76ed662a1352"}}
                             :ns-default build}
           :cljs {:extra-deps {thheller/shadow-cljs {:mvn/version "2.27.5"}}}
           :clj-test {:extra-deps {io.github.cognitect-labs/test-runner {:git/sha "7284cda41fb9edc0f3bc6b6185cfb7138fc8a023"}}
                      :main-opts ["--main" "cognitect.test-runner"]
                      :exec-fn cognitect.test-runner.api/test}
           :cljs-test {:extra-deps {olical/cljs-test-runner {:mvn/version "3.8.0"}}
                       :main-opts ["--main" "cljs-test-runner.main"]}
           :js-build {:main-opts ["--main" "cljs.main"
                                  "--optimizations" "advanced"
                                  "--compile" "gensql.query.js"]}
           :perf {:extra-paths ["perf"]
                  :extra-deps {com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.2.0"}
                               criterium/criterium {:mvn/version "0.4.6"}}
                  :jvm-opts ["-Djdk.attach.allowAttachSelf"]}

           :query-sppl { :extra-deps { io.github.OpenGen/GenSQL.gpm.sppl {:git/sha "718de40878766bb8d08acc2b429a76ed662a1352"}}
                         :jvm-opts ["--add-modules" "jdk.incubator.foreign,jdk.incubator.vector"
                                    "--enable-native-access=ALL-UNNAMED"]
                         :main-opts ["-m" "gensql.query.main"]
                       }

           :coverage
           ;; Invoke with clj -M:test:coverage <args>
           {:main-opts ["-m" "cloverage.coverage"
                        "-p" "src"
                        "-s" "test"]
            :extra-deps {cloverage/cloverage {:mvn/version "1.2.4"}}}}}
